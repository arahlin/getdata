.\" gd_free_entry_strings.3.  The gd_free_entry_strings man page.
.\"
.\" Copyright (C) 2008, 2010, 2013, 2016 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
.\" Texts.  A copy of the license is included in the `COPYING.DOC' file
.\" as part of this distribution.
.\"
.TH gd_free_entry_strings 3 "28 October 2016" "Version 0.10.0" "GETDATA"
.SH NAME
gd_free_entry_strings \(em free strings in a GetData gd_entry_t object
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "gd_entry_t *gd_free_entry_strings(gd_entry_t *" entry );
.hy
.ad n
.SH DESCRIPTION
The
.BR gd_free_entry_strings ()
function frees the character strings found in the gd_entry_t object
.I entry
which were previously allocated by a call to
.BR gd_entry (3).
After freeing a string, the associated pointer is set to NULL.  If
.I entry
is NULL, this function does nothing.

If non-NULL,
.I entry
must point to a valid and properly initialised gd_entry_t object, such as that
returned by
.BR gd_entry (3).
By default, strings are deallocated by calling
.BR free (3)
on each, but a different memory manager may be specified by calling
.BR gd_alloc_funcs (3)
before calling this function.

See 
.BR gd_entry (3)
for a description of the gd_entry_t data type.
.SH RETURN VALUE
The function
.BR gd_free_entry_strings ()
always returns its input,
.IR entry .

.SH NOTES
This function is provided as a convenience only.  The caller may deallocate the
strings in the
.B gd_entry_t
object provided by
.BR gd_entry (3)
itself simply by calling the deallocator on the each initialised string member,
if they prefer to do so.
.SH SEE ALSO
.BR gd_alloc_funcs (3),
.BR gd_entry (3)
