.\" gd_get_sarray_slice.3.  The gd_get_sarray_slice man page.
.\"
.\" Copyright (C) 2010-2013, 2016 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
.\" Texts.  A copy of the license is included in the `COPYING.DOC' file
.\" as part of this distribution.
.\"
.TH gd_get_sarray_slice 3 "22 November 2016" "Version 0.10.0" "GETDATA"
.SH NAME
gd_get_sarray, gd_get_sarray_slice \(em retrieve STRING or SARRAY data from a
dirfile database
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "int gd_get_sarray_slice(DIRFILE *" dirfile ", const char *" field_code ,
.BI "unsigned int " start ", size_t " len ", const char **" data_out );
.HP
.BI "int gd_get_sarray(DIRFILE *" dirfile ", const char *" field_code ,
.BI "const char **" data_out );
.hy
.ad n
.SH DESCRIPTION
The
.BR gd_get_sarray_slice ()
function queries a dirfile(5) database specified by
.I dirfile
for the
.B STRING
or
.B SARRAY
scalar
.IR field_code .
Pointers to read-only string elements of the specified field are stored in the
user-supplied 
.IR data_out
buffer, which must be large enough to hold
.I len
pointers.  The first element of the field stored is given by
.IR start ,
and the number of elements stored is given by
.IR len .

The
.BR gd_get_sarray ()
function behaves similarly, except it returns the entire field, as if
.BR gd_get_sarray_slice ()
were called with
.I start
equal to zero and
.I len
equal to the value returned by
.BR gd_array_len (3).

The 
.I dirfile
argument must point to a valid DIRFILE object previously created by a call to
.BR gd_open (3).
The number of elements returned by
.BR gd_get_sarray ()
may be obtained by calling
.BR gd_array_len (3).
Unlike
.BR gd_getdata (3),
calling
.BR gd_get_sarray_slice ()
never results in a short read; attempting to read past the end of the
field will result in an error, and no data will be returned.

If
.I field_code
refers to a
.B STRING
field, it is treated as if it were a
.B SARRAY
field with only one element.  See the
.BR gd_get_string (3)
manual page for an example of how to replace
.BR gd_get_string (3)
calls with
.BR gd_get_sarray ().

.SH RETURN VALUE
On success,
.BR gd_get_sarray ()
and
.BR gd_get_sarray_slice (),
return zero.  Storage for the strings returned by this function are managed
by GetData and should not be deallocated by the caller.  On error, these
functions return a negative-valued error code.  Possible error codes are:
.TP 8
.B GD_E_ALLOC
The library was unable to allocate memory.
.TP
.B GD_E_BAD_CODE
The field specified by
.I field_code
was not found in the database.
.TP
.B GD_E_BAD_DIRFILE
An invalid
.I dirfile
was supplied.
.TP
.B GD_E_BAD_FIELD_TYPE
The supplied
.I field_code
was not a
.BR STRING
nor
.BR SARRAY .
.TP
.B GD_E_BOUNDS
A request for data beyond the end of the field was made.
.TP
.B GD_E_INTERNAL_ERROR
An internal error occurred in the library while trying to perform the task.
This indicates a bug in the library.  Please report the incident to the
maintainer.
.PP
The error code is also stored in the
.B DIRFILE
object and may be retrieved after this function returns by calling
.BR gd_error (3).
A descriptive error string for the error may be obtained by calling
.BR gd_error_string (3).
.SH SEE ALSO
.BR dirfile (5),
.BR gd_array_len (3),
.BR gd_sarrays (3),
.BR gd_error (3),
.BR gd_error_string (3),
.BR gd_open (3),
.BR gd_put_sarray_slice (3)
